{"version":3,"sources":["../../../src/web.ts"],"names":["e"],"mappings":"qNAaa,EAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,IAAJ,EAAI,4B,2BACM,MAAQ,mBADlB,EAAE,uBAAE,IAAJ,YAAI,MAAJ,WAAM,IAAN,wBAGS,qFACgB,kBADE,EAAlB,EAAkB,SAErB,KAAK,MAAQ,GAFV,gDAHH,gBAAN,GAAQ,OAAO,EAAf,4BAAI,IAAJ,MAAI,MAAJ,WAAM,IAAN,wBASS,WAAU,GAAV,8EACC,EAAQ,KAAK,KAAK,QAAQ,KAAK,YAAY,EAAQ,MADpD,kBAGE,CAAE,UAHJ,gDATH,gBAAN,GAAQ,OAAO,EAAf,4BAAI,IAAJ,MAAI,MAAJ,WAAM,IAAN,wBAeS,WAAU,GAAV,iEACL,KAAK,KAAK,QAAQ,KAAK,YAAY,EAAQ,KAAM,EAAQ,OADpD,gDAfH,gBAAN,GAAQ,OAAO,EAAf,4BAAI,IAAJ,SAAI,MAAJ,WAAM,IAAN,wBAmBS,WAAa,GAAb,iEACL,KAAK,KAAK,WAAW,KAAK,YAAY,EAAQ,MADzC,gDAnBH,gBAAN,GAAQ,OAAO,EAAf,4BAAI,IAAJ,OAAI,MAAJ,WAAM,IAAN,wBAuBS,kGACC,EAAO,KAAK,UAAU,KAAI,YAAC,OAAI,EAAE,UAAU,EAAK,OAAO,WADxD,kBAGE,CAAE,SAHJ,gDAvBH,kBAAE,OAAO,EAAf,4BAAI,IAAJ,QAAI,MAAJ,WAAM,IAAN,wBA6BS,sGACa,KAAK,WADlB,IACL,2BAAW,EAAuB,QAChC,KAAK,KAAK,WAAW,GAFlB,8EA7BH,kBAAE,OAAO,EAAf,4BAAI,IAAJ,UAAI,MAAJ,WAAM,IAAN,wBAmCS,wGACC,EAAqB,GACrB,EAAqB,GACrB,EAAY,QACZ,EAAO,OAAO,KAAK,KAAK,MAAM,QAAO,YAAC,OAA6B,IAAzB,EAAE,QAAQ,MAJrD,cAMgB,GANhB,gEAMM,EANN,QAOG,EAAM,EAAO,UAAU,EAAU,QACjC,EAAiC,QAA5B,EAAG,KAAK,KAAK,QAAQ,UAAO,QAAI,GARxC,UASmC,KAAK,IAAI,CAAE,QAT9C,oBAWyB,kBAXzB,EASK,MATL,iBAYD,EAAS,KAAK,GAZb,yCAcK,KAAK,IAAI,CAAE,MAAK,UAdrB,QAeD,EAAS,KAAK,GAfb,mFAAAA,EAAA,mFAmBE,CAAE,WAAU,aAnBd,gEAnCH,kBAAE,OAAO,EAAf,4BAAI,IAAJ,YAAI,MAAJ,WAAM,IAAN,wBAyDS,0FACa,QACZ,EAAO,OAAO,KAAK,KAAK,MAAM,QAAO,YAAC,OAA6B,IAAzB,EAAE,QADhC,YADb,cAGgB,GAHhB,IAGL,2BAAW,EAAgB,QACzB,KAAK,KAAK,WAAW,GAJlB,WAAAA,EAAA,iEAzDH,kBAAE,OAAO,EAAf,4BAAI,IAAJ,OAAI,IAiEF,WACE,OAAO,OAAO,eAlElB,CAAI,IAAJ,SAAI,IAqEF,WACE,MAAsB,kBAAf,KAAK,MAA4B,GAAjC,UAAyC,KAAK,MAA9C,OAtEX,CAAI,IAAJ,UAAI,MAyEM,WAAO,WACb,OAAO,OAAO,KAAK,KAAK,MAAM,QAAO,YAAC,OAA+B,IAA3B,EAAE,QAAQ,EAAK,aA1E7D,CAAI,IAAJ,cAAI,MA6EM,SAAY,GAClB,OAAO,KAAK,OAAS,MA9EzB,G,MAAgC","file":"static/js/44.575e3297.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class StorageWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}